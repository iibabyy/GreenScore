#!/usr/bin/env python3
"""
Script de test pour v√©rifier le chargement lazy du vectordb
"""
import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from rag.vectorstore_manager import VectorStoreManager

def test_lazy_loading():
    print("Test du chargement lazy du vectordb...")

    # Cr√©er une instance du gestionnaire
    manager = VectorStoreManager()

    print("Avant l'appel √† get_vectordb() - la base n'est pas encore charg√©e")

    # Acc√©der √† la base vectorielle - cela devrait la charger
    vectordb = manager.get_vectordb()

    print(f"Apr√®s l'appel √† get_vectordb() - la base a √©t√© charg√©e avec succ√®s")
    print(f"Type de vectordb: {type(vectordb)}")

    # essayer d'acc√©der √† la base vectorielle - cela devrait r√©utiliser la m√™me instance
    print("üîÑ Test de la r√©utilisation de l'instance existante...")
    vectordb2 = manager.get_vectordb()
    
    if vectordb is vectordb2:
        print("‚úÖ Les deux appels ont retourn√© la m√™me instance - le caching fonctionne correctement!")
    else:
        print("‚ùå Les instances sont diff√©rentes - probl√®me avec le caching")

    print("Test termin√© avec succ√®s!")

if __name__ == "__main__":
    test_lazy_loading()